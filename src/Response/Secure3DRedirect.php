<?php namespace Academe\SagePay\Psr7\Response;

/**
 * Response to a Payment (and probably Authorise) requent when a
 * 3D Secure redirect is needed.
 */

use Academe\SagePay\Psr7\Helper;
use Psr\Http\Message\ResponseInterface;
use Academe\SagePay\Psr7\Request\AbstractRequest;

class Secure3DRedirect extends AbstractResponse
{
    protected $transactionId;

    protected $Secure3D;
    protected $acsUrl;
    protected $paReq;

    /**
     * @param ResponseInterface $message
     * @internal param array|object|ResponseInterface $data
     */
    public function __construct(ResponseInterface $message = null)
    {
        if (isset($message)) {
            $data = $this->parseBody($message);
            $this->setData($data, $message->getStatusCode());
        }
    }

    /**
     * @param $data
     * @param $httpCode
     * @return $this
     */
    protected function setData($data, $httpCode)
    {
        $this->setHttpCode($this->deriveHttpCode($httpCode, $data));

        $this->transactionId            = Helper::dataGet($data, 'transactionId', null);

        $this->setStatuses($data);

        $this->acsUrl                   = Helper::dataGet($data, 'acsUrl', null);
        $this->paReq                    = Helper::dataGet($data, 'paReq', null);

        return $this;
    }

    /**
     * The ID given to the transaction by Sage Pay.
     * @return mixed
     */
    public function getTransactionId()
    {
        return $this->transactionId;
    }

    /**
     * @return string The 3DSecure ACS URL, to send users to
     */
    public function getAcsUrl()
    {
        return $this->acsUrl;
    }

    /**
     * @return string The 3DSecure PA REQ, the token to send along to the ACS URL
     */
    public function getPaReq()
    {
        return $this->paReq;
    }

    /**
     * Get the fields (names and values) to go into the paReq POST.
     * MD = Merchant Data; it is generated by the merchant site, i.e. it is
     * the merchant transaction ID (or an equivalent).
     * $termUrl is the return URL after the PA Request is complete. Add it here,
     * or set it explicitly in your form.
     *
     * @param string|null $termUrl The callback URL, if known at this point
     * @param string|null $md The Merchant Data, if known at this point
     * @return array List of parameter fields and values to go into the PA Req POST
     * @internal param string $merchantData The MD key to identify the transaction in the callback
     */
    public function getPaRequestFields($termUrl = null, $md = null)
    {
        $fields = [
            'PaReq' => $this->getPaReq(),
        ];

        if (isset($termUrl)) {
            $fields['TermUrl'] = $termUrl;
        }

        if (isset($md)) {
            $fields['MD'] = $md;
        }

        return $fields;
    }

    /**
     * Convenient serialisation for logging and debugging.
     * @return array
     */
    public function jsonSerialize()
    {
        return [
            'transactionId' => $this->transactionId,
            'status' => $this->status,
            'statusCode' => $this->statusCode,
            'statusDetail' => $this->statusDetail,
            'acsUrl' => $this->acsUrl,
            'paReq' => $this->paReq,
        ];
    }
}
